cmake_minimum_required(VERSION 3.13)

project(rendering_samples)

set(CMAKE_MACOSX_RPATH OFF)
set(CMAKE_CXX_STANDARD 17)

if (WIN32)
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
endif()

include_directories(.)
include_directories(3party/rf)
include_directories(${CMAKE_CURRENT_BINARY_DIR}/3party/assimp/include)
include_directories(3party/rf/3party/assimp/include)
include_directories(3party/rf/3party/cxxopts/include)
include_directories(3party/rf/3party/glfw/include)
include_directories(3party/rf/3party/glm)
include_directories(3party/rf/3party/glm-aabb)
include_directories(3party/rf/3party/stb)

macro(configure_files srcDir destDir)
  make_directory(${CMAKE_CURRENT_BINARY_DIR}/${destDir})
  file(GLOB templateFiles RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}/${srcDir} ${srcDir}/*)
  foreach(templateFile ${templateFiles})
    set(srcTemplatePath ${srcDir}/${templateFile})
    if(NOT IS_DIRECTORY ${srcTemplatePath})
      configure_file(${srcTemplatePath}
        ${CMAKE_CURRENT_BINARY_DIR}/${destDir}/${templateFile} COPYONLY)
    else()
      message(FATAL_ERROR "Nested directories are not supported")
    endif()
  endforeach(templateFile)
endmacro(configure_files)

add_subdirectory(3party/rf)
add_subdirectory(opengl/basic)
add_subdirectory(opengl/skinned)
